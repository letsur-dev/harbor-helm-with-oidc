{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace (include "harbor.core" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "harbor.core" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{ include "harbor.labels" . | indent 4 }}
type: Opaque
data:
  {{- if not .Values.existingSecretSecretKey }}
  secretKey: {{ .Values.secretKey | b64enc | quote }}
  {{- end }}
  {{- if not .Values.core.existingSecret }}
  secret: {{ .Values.core.secret | default (include "harbor.secretKeyHelper" (dict "key" "secret" "data" $existingSecret.data)) | default (randAlphaNum 16) | b64enc | quote }}
  {{- end }}
  {{- if not .Values.core.secretName }}
  {{- $ca := genCA "harbor-token-ca" 365 }}
  tls.key: {{ .Values.core.tokenKey | default $ca.Key | b64enc | quote }}
  tls.crt: {{ .Values.core.tokenCert | default $ca.Cert | b64enc | quote }}
  {{- end }}
  {{- if not .Values.existingSecretAdminPassword }}
  HARBOR_ADMIN_PASSWORD: {{ .Values.harborAdminPassword | b64enc | quote }}
  {{- end }}
  {{- if not .Values.database.external.existingSecret }}
  POSTGRESQL_PASSWORD: {{ template "harbor.database.encryptedPassword" . }}
  {{- end }}
  {{- if not .Values.registry.credentials.existingSecret }}
  REGISTRY_CREDENTIAL_PASSWORD: {{ .Values.registry.credentials.password | b64enc | quote }}
  {{- end }}
  {{- if not .Values.core.existingXsrfSecret }}
  CSRF_KEY: {{ .Values.core.xsrfKey | default (include "harbor.secretKeyHelper" (dict "key" "CSRF_KEY" "data" $existingSecret.data)) | default (randAlphaNum 32) | b64enc | quote }}
  {{- end }}

{{- if .Values.core.oidc }}
  # Format the given OIDC Setting values as JSON
  {{- $oidc := .Values.core.oidc }}
  {{- $json := dict }}

  {{- $_ := set $json "auth_mode" "oidc_auth"}}

  {{- if $oidc.name }}
    {{- $_ := set $json "oidc_name" $oidc.name }}
  {{- end }}

  {{- if $oidc.endpoint }}
    {{- $_ := set $json "oidc_endpoint" $oidc.endpoint }}
  {{- end }}

  {{- if $oidc.clientId }}
    {{- if $oidc.clientId.value }}
      {{- $_ := set $json "oidc_client_id" $oidc.clientId.value }}
    {{- else if $oidc.clientId.secretKeyRef }}
      {{- $ref := $oidc.clientId.secretKeyRef }}
      {{- $secret := lookup "v1" "Secret" $ref.name $ref.namespace | default (lookup "v1" "Secret" $.Release.Namespace $ref.name) }}
      {{- if $secret }}
        {{- $_ := set $json "oidc_client_id" (index $secret.data $ref.key | b64dec) }}
      {{- end }}
    {{- end }}
  {{- end }}

  {{- if $oidc.clientSecret }}
    {{- if $oidc.clientSecret.value }}
      {{- $_ := set $json "oidc_client_secret" $oidc.clientSecret.value }}
    {{- else if $oidc.clientSecret.secretKeyRef }}
      {{- $ref := $oidc.clientSecret.secretKeyRef }}
      {{- $secret := lookup "v1" "Secret" $ref.name $ref.namespace | default (lookup "v1" "Secret" $.Release.Namespace $ref.name) }}
      {{- if $secret }}
        {{- $_ := set $json "oidc_client_secret" (index $secret.data $ref.key | b64dec) }}
      {{- end }}
    {{- end }}
  {{- end }}

  {{- if $oidc.scope }}
    {{- $_ := set $json "oidc_scope" $oidc.scope }}
  {{- end }}

  {{- if hasKey $oidc "verify_cert" }}
    {{- $_ := set $json "oidc_verify_cert" $oidc.verify_cert }}
  {{- end }}
  CONFIG_OVERWRITE_JSON: {{ $json | toJson | b64enc | quote }}
{{- end }}

  {{- template "harbor.traceJaegerPassword" . }}
